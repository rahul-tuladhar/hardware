kafka:
   image: spotify/kafka
   container_name: kafka
   environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
   hostname: kafka

es:
   image: elasticsearch:2.0
   container_name: es
   ports:
      - "9200:9200"

batch:
   image: tp33/django
   container_name: batch
   links:
      - kafka:kafka
      - es:es
   volumes:
      - ./hardware_batch:/app
      - ./hardware_models/fixture:/app/fixture
   command: bash -c "python /app/runscripts.py"

models:
   image: tp33/django
   external_links:
      - mysql:db
   ports:
      - "8001:8000"
   volumes:
      - ./hardware_models:/app
   command: bash -c "pip install requests && pip install django_widget_tweaks && pip install django_filter && python manage.py makemigrations posts && python manage.py migrate && python manage.py loaddata /app/fixture/fixtures.json && mod_wsgi-express start-server --reload-on-changes hardware_models/wsgi.py"


exp:
   image: tp33/django
   links:
      - models:models-api
      - kafka:kafka
      - es:es
   ports:
      - "8002:8000"
   volumes:
      - ./hardware_exp:/app
   command: bash -c "pip install requests && pip install django_widget_tweaks && pip install django_filter && mod_wsgi-express start-server --reload-on-changes hardware_exp/wsgi.py"

web:
   image: tp33/django
   links:
      - exp:exp-api
   ports:
      - "8000:8000"
   volumes:
      - ./hardware_web:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes hardware_web/wsgi.py"

selenium-chrome:
  image: selenium/standalone-chrome
  container_name: selenium-chrome
  links:
    - web:web
  ports:
    - "4444:4444"

selenium-test:
  image: tp33/django
  container_name: selenium-test
  links:
    - selenium-chrome:selenium-chrome
    - web:web
  volumes:
    - ./hardware_selenium:/app
  command: bash -c "pip install selenium==3.11.0 && python /app/selenium_test_script.py"

web2:
   image: tp33/django
   links:
      - exp:exp-api
   ports:
      - "8004:8000"
   volumes:
      - ./hardware_web:/app
   command: bash -c "pip install requests && mod_wsgi-express start-server --reload-on-changes hardware_web/wsgi.py"

haproxy:
   image: haproxy:1.7
   links:
      - web
      - web2
   ports:
      - "80:8000"
   volumes:
      - ./:/app
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

# spark-master:
#   image: gettyimages/spark
#   command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
#   container_name:  spark-master
#   hostname: spark-master
#   environment:
#     MASTER: spark://spark-master:7077
#     SPARK_CONF_DIR: /conf
#   expose:
#     - 7001
#     - 7002
#     - 7003
#     - 7004
#     - 7005
#     - 7006
#     - 7077
#     - 6066
#   ports:
#     - 4040:4040
#     - 6066:6066
#     - 7077:7077
#     - 8080:8080
#   volumes:
#     - ./spark:/app
#
# spark-worker:
#   image: gettyimages/spark
#   command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
#   container_name: spark-worker
#   hostname: spark-worker
#   environment:
#     SPARK_CONF_DIR: /conf
#     SPARK_WORKER_CORES: 2
#     SPARK_WORKER_MEMORY: 512m
#     SPARK_WORKER_PORT: 8881
#     SPARK_WORKER_WEBUI_PORT: 8081
#   links:
#     - spark-master
#   expose:
#     - 7012
#     - 7013
#     - 7014
#     - 7015
#     - 7016
#     - 8881
#   ports:
#     - 8081:8081
#   volumes:
#     - ./spark:/app
